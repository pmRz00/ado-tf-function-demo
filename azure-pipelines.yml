# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:


- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/src/'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(System.DefaultWorkingDirectory)/dist/azure.zip'
    replaceExistingArchive: true
    verbose: true


- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      ls -lisa $(System.DefaultWorkingDirectory)/dist/azure.zip
    failOnStderr: true

- task: TerraformCLI@0
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: 'Internal Consumption tostille(7d5e75b2-656e-4a96-b12f-24e2e79a8279)'
    backendAzureRmResourceGroupName: 'ado-tf-function-demo'
    backendAzureRmStorageAccountName: 'tfstatetostille'
    backendAzureRmContainerName: 'state'
    backendAzureRmKey: 'terraform.tfstate'
    allowTelemetryCollection: true
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
    
- task: TerraformCLI@0
  inputs:
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
    environmentServiceName: 'Internal Consumption tostille(7d5e75b2-656e-4a96-b12f-24e2e79a8279)'
    commandOptions: '-out=tfplan.out'
    allowTelemetryCollection: true

- task: TerraformCLI@0
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
    environmentServiceName: 'Internal Consumption tostille(7d5e75b2-656e-4a96-b12f-24e2e79a8279)'
    allowTelemetryCollection: true
